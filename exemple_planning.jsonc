

// pour le get avec la date et le lieu (Place.id) pour afficher dans les 31 jours
//
// Pour la mise en forme du planning de réservations {reservations}, le front a besoin des éléments suivants :

//Une liste de réservations avec dans chaque reservation :
//  - le client (customer)
//  - la date d'arrivée (arrivalDate et la date de départ ()departureDate)
//  - les id des lits sont regroupé par chambre et classé par ordre croissant (les chambres ne sont pas affiché)








//  - les clients (customer) pour le lieu affiché (Place)
//  - la date d'arrivée (arrivalDate et la date de départ ()departureDate),
//  - les chambres (rooms) affichés dans l'ordre (toujours le même ordre), et pour chaque chambre afficher un tableau de
//     contenant des tableaux de lits :
//              - l'indexation du premier tableau devra permettre de toujours retrouver les tableaux de lits qui seront toujours dans le meme ordre
//              - dans chaque tableau de lits, il faudra classer les lits par ordre croissant de leur id.chambre.chambre
//
//  -  le front enverra dans sa requête le lieu (Place) et la date, plus exactement le nom du lieu (Place.id) qui lui est nécessaire et le back retournera toutes les réservations
//     concernant ce lieu sous la forme décrite ci-dessous. Mais aussi en fonction de la date.
//          ==> sera envoyé dans la requête : le lieu (Place) et la date (date de commencement d'affichage du calendrier).

// Dans un premier temps, retourner les informations ci-dessous en fonction du lieu (Place) et de la date à afficher dans le planning d'occupation.
// Ensuite viendra s'ajouter toute l'algorithmie en fonction de la date et du lieu.

// En vrac, pas réfléchi du tout:
// La date retournée sera sur quel format ? String, LocalDate, autre?  ==> dans l'url forcément en String (à convertir?)
// Pour l'instant on dit time_stamp



  customer,                               (dans Reservation)

   arrivalDate,                           (dans Reservation)

   departureDate,                         (dans Reservation)
   //Par chambre et par odre croissant
   rooms: [1, 5, 2, 8, 3,4,25]
   },    (dans Place)

 {reservation2},

 {reservation3},

 {reservation4}

}


{
 {customer,

   arrivalDate,

   departureDate,

   rooms: {[bedId, bedId2, bedId3, bedId4, bedId5],
       room2,
       room3,
       romm4
     }},


 {reservation2},

 {reservation3},

 {reservation4}

}



Booking beds : obtenir les lits dispo entre deux dates (arrivalDate, departureDate)

{
	lieu1,
	lieu2,
	lieu3,
	{ nom,
		{	chambre1,
		  chambre2,
		  chambre3,
		  {name,kindType,{lit1,lit2,lit3}}
		}
	}
}

//bouchon
const beds: IPlace[] = [
  {
    name: 'RDC',
    rooms: [
      {
        name: 'room01',
        beds: [
          { number: 'bed011', numberOfPlaces: 1, id: 1 },
          { number: 'bed012', numberOfPlaces: 1, id: 2 },
          { number: 'bed013', numberOfPlaces: 2, id: 3 },
        ],
        bedroomKind: { name: 'blue' },
      },
      {
        name: 'room02',
        beds: [
          { number: 'bed021', numberOfPlaces: 1, id: 4 },
          { number: 'bed022', numberOfPlaces: 1, id: 5 },
        ],
        bedroomKind: { name: 'blue' },
      },
      {
        name: 'room03',
        beds: [
          { number: 'bed031', numberOfPlaces: 1, id: 6 },
          { number: 'bed032', numberOfPlaces: 1, id: 7 },
          { number: 'bed033', numberOfPlaces: 1, id: 8 },
        ],
        bedroomKind: { name: 'pink' },
      },
    ],
  },
  {
    name: 'Etage1',
    rooms: [
      {
        name: 'room11',
        beds: [
          { number: 'bed111', numberOfPlaces: 2, id: 9 },
          { number: 'bed112', numberOfPlaces: 1, id: 10 },
          { number: 'bed113', numberOfPlaces: 2, id: 11 },
        ],
        bedroomKind: { name: 'pink' },
      },
      {
        name: 'room12',
        beds: [
          { number: 'bed121', numberOfPlaces: 1, id: 12 },
          { number: 'bed122', numberOfPlaces: 1, id: 13 },
        ],
        bedroomKind: { name: 'red' },
      },
      {
        name: 'room13',
        beds: [
          { number: 'bed131', numberOfPlaces: 1, id: 14 },
          { number: 'bed132', numberOfPlaces: 1, id: 15 },
          { number: 'bed133', numberOfPlaces: 1, id: 16 },
          { number: 'bed134', numberOfPlaces: 1, id: 17 },
        ],
        bedroomKind: { name: 'red' },
      },
    ],
  },
  {
    name: 'Etage2',
    rooms: [
      {
        name: 'room21',
        beds: [
          { number: 'bed211', numberOfPlaces: 2, id: 18 },
          { number: 'bed212', numberOfPlaces: 1, id: 19 },
          { number: 'bed213', numberOfPlaces: 2, id: 20 },
        ],
        bedroomKind: { name: 'red' },
      },
    ],
  },
  {
    name: 'Etage3',
    rooms: [
      {
        name: 'room31',
        beds: [
          { number: 'bed311', numberOfPlaces: 2, id: 21 },
          { number: 'bed312', numberOfPlaces: 1, id: 22 },
          { number: 'bed313', numberOfPlaces: 2, id: 23 },
        ],
        bedroomKind: { name: 'red' },
      },
      {
        name: 'room32',
        beds: [
          { number: 'bed321', numberOfPlaces: 2, id: 24 },
          { number: 'bed323', numberOfPlaces: 2, id: 25 },
        ],
        bedroomKind: { name: 'violet' },
      },
      {
        name: 'room33',
        beds: [
          { number: 'bed331', numberOfPlaces: 1, id: 26 },
          { number: 'bed333', numberOfPlaces: 3, id: 27 },
        ],
        bedroomKind: { name: 'violet' },
      },
      {
        name: 'room34',
        beds: [
          { number: 'bed341', numberOfPlaces: 1, id: 28 },
          { number: 'bed342', numberOfPlaces: 1, id: 29 },
        ],
        bedroomKind: { name: 'blue' },
      },
    ],
  },
];